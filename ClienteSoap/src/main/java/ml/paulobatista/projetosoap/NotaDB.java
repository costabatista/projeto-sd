
package ml.paulobatista.projetosoap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NotaDB", targetNamespace = "http://projetosoap.paulobatista.ml/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NotaDB {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "remove", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.Remove")
    @ResponseWrapper(localName = "removeResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.RemoveResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/removeRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/removeResponse")
    public void remove(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ml.paulobatista.projetosoap.Nota
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "find", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.Find")
    @ResponseWrapper(localName = "findResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.FindResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/findRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/findResponse")
    public Nota find(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0);

    /**
     * 
     * @return
     *     returns java.util.List<ml.paulobatista.projetosoap.Nota>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.FindAll")
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.FindAllResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/findAllRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/findAllResponse")
    public List<Nota> findAll();

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "edit", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.Edit")
    @ResponseWrapper(localName = "editResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.EditResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/editRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/editResponse")
    public void edit(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Nota arg1);

    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "countREST", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.CountREST")
    @ResponseWrapper(localName = "countRESTResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.CountRESTResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/countRESTRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/countRESTResponse")
    public String countREST();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<ml.paulobatista.projetosoap.Nota>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findRange", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.FindRange")
    @ResponseWrapper(localName = "findRangeResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.FindRangeResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/findRangeRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/findRangeResponse")
    public List<Nota> findRange(
        @WebParam(name = "arg0", targetNamespace = "")
        Integer arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        Integer arg1);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "createEntidade", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.CreateEntidade")
    @ResponseWrapper(localName = "createEntidadeResponse", targetNamespace = "http://projetosoap.paulobatista.ml/", className = "ml.paulobatista.projetosoap.CreateEntidadeResponse")
    @Action(input = "http://projetosoap.paulobatista.ml/NotaDB/createEntidadeRequest", output = "http://projetosoap.paulobatista.ml/NotaDB/createEntidadeResponse")
    public void createEntidade(
        @WebParam(name = "arg0", targetNamespace = "")
        Nota arg0);

}
